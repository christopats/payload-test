steps:
  - id: install
    name: 'europe-west2-docker.pkg.dev/payload-test-444215/platform/build'
    entrypoint: bash
    args:
      - -c
      - |
        echo "$$ENV_FRONTEND" > .env;
        pnpm install;
    secretEnv: ['ENV_FRONTEND']

  - id: migrate
    name: 'europe-west2-docker.pkg.dev/payload-test-444215/platform/build'
    entrypoint: bash
    args:
      - -c
      - |
        /cloudsql/cloud-sql-proxy --unix-socket /cloudsql ${_INSTANCE_CONNECTION_NAME} & sleep 2;
        pnpm payload migrate

  - id: build-app
    name: 'europe-west2-docker.pkg.dev/payload-test-444215/platform/build'
    entrypoint: bash
    args:
      - -c
      - |
        /cloudsql/cloud-sql-proxy --unix-socket /cloudsql ${_INSTANCE_CONNECTION_NAME} & sleep 2;
        pnpm build

  - id: build-container
    name: 'gcr.io/cloud-builders/docker'
    script: |
      docker build -t europe-west2-docker.pkg.dev/$PROJECT_ID/platform/frontend:$SHORT_SHA .
    automapSubstitutions: true

  - id: push-container
    name: 'gcr.io/cloud-builders/docker'
    script: |
      docker push europe-west2-docker.pkg.dev/$PROJECT_ID/platform/frontend:$SHORT_SHA
    automapSubstitutions: true

  - id: deploy-container
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'frontend',
        '--image',
        'europe-west2-docker.pkg.dev/$PROJECT_ID/platform/frontend:$SHORT_SHA',
        '--region',
        'europe-west2',
      ]
    automapSubstitutions: true

  - id: deploy-static
    name: 'europe-west2-docker.pkg.dev/payload-test-444215/platform/build'
    entrypoint: 'firebase'
    args: ['deploy', '--only', 'hosting']

availableSecrets:
  secretManager:
    - versionName: projects/payload-test-444215/secrets/env-frontend/versions/latest
      env: 'ENV_FRONTEND'

options:
  dynamicSubstitutions: true
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _INSTANCE_CONNECTION_NAME: payload-test-444215:europe-west2:project
